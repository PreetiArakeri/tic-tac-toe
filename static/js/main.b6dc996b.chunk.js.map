{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","value","calculateWinner","squares","lines","i","length","a","b","c","Board","state","Array","fill","xIsNext","count","this","slice","setState","handleClick","status","winner","renderSquare","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAEA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,QA4Eb,SAASC,EAAgBC,GAWvB,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACnBD,EAAMC,GADa,GAC9BE,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,GAGnB,OAAO,KAIMG,M,kDA5Fb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IACDa,MAAQ,CACXR,QAASS,MAAM,GAAGC,KAAK,MACvBC,SAAS,EACTC,MAAO,GALQ,E,wDASPV,GACV,IAAMF,EAAUa,KAAKL,MAAMR,QAAQc,QAC/Bf,EAAgBC,IAAYA,EAAQE,KAGxCF,EAAQE,GAAKW,KAAKL,MAAMG,QAAU,IAAM,IACxCE,KAAKE,SAAS,CACZH,MAAMC,KAAKL,MAAMI,MAAM,EACvBZ,QAASA,EACTW,SAAUE,KAAKL,MAAMG,a,mCAIZT,GAAI,IAAD,OACd,OACE,cAACR,EAAD,CACEI,MAAOe,KAAKL,MAAMR,QAAQE,GAC1BL,QAAS,kBAAM,EAAKmB,YAAYd,Q,+BAOpC,IACIe,EADEC,EAASnB,EAAgBc,KAAKL,MAAMR,SAc1C,OAREiB,EADEC,EACO,WAAaA,EACM,GAApBL,KAAKL,MAAMI,MACX,aAIF,iBAAmBC,KAAKL,MAAMG,QAAU,IAAM,KAGpD,gCACE,qBAAKf,UAAU,QAAf,SAbQ,gBAeR,sBAAKA,UAAU,YAAf,UACGiB,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,MAErB,sBAAKvB,UAAU,YAAf,UACGiB,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,MAErB,sBAAKvB,UAAU,YAAf,UACGiB,KAAKM,aAAa,GAClBN,KAAKM,aAAa,GAClBN,KAAKM,aAAa,MAErB,qBAAKvB,UAAU,SAAf,SAAyBqB,W,GAnEbG,IAAMC,WCGXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b6dc996b.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n      count :0,\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      count:this.state.count+1,\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.state.squares[i]}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n\n  render() {\n    \n    const winner = calculateWinner(this.state.squares);\n    let status;\n   \n    let title = \"TIC TAC TOE\";\n      \n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else if(this.state.count == 9) {\n      status =\"Match Tied\"\n      \n    }\n   else\n   status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');  \n    \n    return (\n      <div>\n        <div className=\"title\">{title}</div>\n     \n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n        <div className=\"status\">{status}</div>\n      </div>\n    );\n  }\n}\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n\nexport default Board;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}