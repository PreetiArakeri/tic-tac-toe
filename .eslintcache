[{"D:\\New\\myfirstreact\\src\\index.js":"1","D:\\New\\myfirstreact\\src\\reportWebVitals.js":"2","D:\\New\\myfirstreact\\src\\App.js":"3"},{"size":500,"mtime":1610439495538,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":2176,"mtime":1610529641502,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1ganh88",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"D:\\New\\myfirstreact\\src\\index.js",[],["16","17"],"D:\\New\\myfirstreact\\src\\reportWebVitals.js",[],"D:\\New\\myfirstreact\\src\\App.js",["18"],"import './App.css';\nimport React from 'react';\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n      count :0,\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      count:this.state.count+1,\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.state.squares[i]}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n\n  render() {\n    \n    const winner = calculateWinner(this.state.squares);\n    let status;\n   \n    let title = \"TIC TAC TOE\";\n      \n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else if(this.state.count ==9) {\n      status =\"Match Tied\"\n      \n    }\n   else\n   status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');  \n    \n    return (\n      <div>\n        <div className=\"title\">{title}</div>\n     \n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n        <div className=\"status\">{status}</div>\n      </div>\n    );\n  }\n}\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n\nexport default Board;\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":51,"column":32,"nodeType":"25","messageId":"26","endLine":51,"endColumn":34},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]